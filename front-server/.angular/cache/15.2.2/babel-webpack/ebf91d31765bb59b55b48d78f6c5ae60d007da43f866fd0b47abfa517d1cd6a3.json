{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = 'http://127.0.0.1:8080/api/persons';\nexport class TutorialService {\n  constructor(http) {\n    this.http = http;\n  }\n  obtenerDatos() {\n    return this.http.get(`${baseUrl}`);\n  }\n  enviarDatosUsuario(userData) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    // Aquí convertimos el objeto userData a formato JSON antes de enviarlo al backend\n    return this.http.post(`${baseUrl}/register`, JSON.stringify(userData), httpOptions);\n  }\n  agregarUsuario(userData) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    // Aquí convertimos el objeto userData a formato JSON antes de enviarlo al backend\n    return this.http.post(`${baseUrl}/new`, JSON.stringify(userData), httpOptions);\n  }\n}\nTutorialService.ɵfac = function TutorialService_Factory(t) {\n  return new (t || TutorialService)(i0.ɵɵinject(i1.HttpClient));\n};\nTutorialService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TutorialService,\n  factory: TutorialService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,sBAAsB;;;AAGlD,MAAMC,OAAO,GAAG,mCAAmC;AAMnD,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAGxCC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,GAAGL,OAAO,EAAE,CAAC;EACzC;EAGAM,kBAAkB,CAACC,QAAa;IAC9B,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIV,WAAW,CACtB;QAAE,cAAc,EAAE;MAAkB,CAAE;KAEzC;IACD;IACA,OAAO,IAAI,CAACI,IAAI,CAACO,IAAI,CAAM,GAAGV,OAAO,WAAW,EAAEW,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,EAAEC,WAAW,CAAC;EAC1F;EAGAK,cAAc,CAACN,QAAa;IAC1B,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIV,WAAW,CACtB;QAAE,cAAc,EAAE;MAAkB,CAAE;KAEzC;IACD;IACA,OAAO,IAAI,CAACI,IAAI,CAACO,IAAI,CAAM,GAAGV,OAAO,MAAM,EAAEW,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,EAAEC,WAAW,CAAC;EACrF;;;mBA7BWP,eAAe;AAAA;;SAAfA,eAAe;EAAAa,SAAfb,eAAe;EAAAc,YAHd;AAAM","names":["HttpHeaders","baseUrl","TutorialService","constructor","http","obtenerDatos","get","enviarDatosUsuario","userData","httpOptions","headers","post","JSON","stringify","agregarUsuario","factory","providedIn"],"sourceRoot":"","sources":["/home/s/Escritorio/kali/front-server/src/app/services/tutorial.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Tutorial } from '../models/tutorial.model';\n\nconst baseUrl = 'http://127.0.0.1:8080/api/persons';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TutorialService {\n\n  constructor(private http: HttpClient) { }\n\n\n  obtenerDatos(): Observable<any> {\n    return this.http.get<any>(`${baseUrl}`);\n  }\n\n\n  enviarDatosUsuario(userData: any): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders(\n        { 'Content-Type': 'application/json' }\n      )\n    };\n    // Aquí convertimos el objeto userData a formato JSON antes de enviarlo al backend\n    return this.http.post<any>(`${baseUrl}/register`, JSON.stringify(userData), httpOptions);\n  }\n\n\n  agregarUsuario(userData: any): Observable<any> {\n    const httpOptions = {\n      headers: new HttpHeaders(\n        { 'Content-Type': 'application/json' }\n      )\n    };\n    // Aquí convertimos el objeto userData a formato JSON antes de enviarlo al backend\n    return this.http.post<any>(`${baseUrl}/new`, JSON.stringify(userData), httpOptions);\n  }\n\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}